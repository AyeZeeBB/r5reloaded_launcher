<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FontFamily x:Key="NunitoSansNormalExtraLight">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal ExtraLight</FontFamily>
    <FontFamily x:Key="NunitoSansNormalLight">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal Light</FontFamily>
    <FontFamily x:Key="NunitoSansNormal">.../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal</FontFamily>
    <FontFamily x:Key="NunitoSansNormalMedium">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal Medium</FontFamily>
    <FontFamily x:Key="NunitoSansNormalSemiBold">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal SemiBold</FontFamily>
    <FontFamily x:Key="NunitoSansNormalExtraBold">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal ExtraBold</FontFamily>
    <FontFamily x:Key="NunitoSansNormalBlack">../../Assets/NunitoSans-VariableFont.ttf#Nunito Sans Normal Black</FontFamily>

    <FontFamily x:Key="SansationBold">../../Assets/Sansation-Bold.ttf#Sansation Bold</FontFamily>
    <FontFamily x:Key="SansationBoldItalic">../../Assets/Sansation-BoldItalic.ttf#Sansation Bold Italic</FontFamily>
    <FontFamily x:Key="SansationItalic">../../Assets/Sansation-Italic.ttf#Sansation Italic</FontFamily>
    <FontFamily x:Key="SansationLight">../../Assets/Sansation-Light.ttf#Sansation Light</FontFamily>
    <FontFamily x:Key="SansationLightItalic">../../Assets/Sansation-LightItalic.ttf#Sansation Light Italic</FontFamily>
    <FontFamily x:Key="SansationRegular">../../Assets/Sansation-Regular.ttf#Sansation Regular</FontFamily>

    <DrawingImage x:Key="logo_main_whiteDrawingImage">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M0,0 V1365 H4096 V0 H0 Z">
                <DrawingGroup Transform="1,0,0,1,2732,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L201,0 215,2 229,7 241,14 251,23 259,34 265,47 267,53 269,69 269,653 266,672 261,685 254,696 245,706 235,713 224,718 209,722 196,723 -1,723 -1,2z M95,88L95,635 174,635 174,88z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,3351,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L201,0 215,2 227,6 240,13 250,22 257,30 265,46 268,58 269,67 269,655 266,672 262,684 255,695 246,705 237,712 224,718 209,722 199,723 0,723z M95,88L95,635 174,635 174,88z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,494,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L203,0 216,2 229,6 243,14 252,22 260,33 266,45 270,63 270,413 266,429 261,441 252,453 243,461 231,468 215,474 240,554 261,621 283,692 292,720 292,723 198,723 196,721 142,530 128,480 127,476 99,475 99,722 98,723 4,723 3,555 4,88 -18,88 -17,79 -1,2z M99,88L99,387 176,387 176,88z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1156,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L203,0 216,2 231,7 244,15 251,21 260,33 267,48 270,65 270,411 267,426 263,436 259,444 252,453 243,461 231,468 216,473 216,477 235,539 245,570 259,615 279,679 292,720 291,723 197,723 191,704 168,622 145,541 127,477 127,475 100,476 99,722 98,723 4,723 4,88 -18,88 -17,79 -2,6z M99,88L99,387 176,387 176,88z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,2110,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L132,0 148,3 161,8 171,14 183,25 192,39 196,49 199,65 199,657 196,673 191,685 184,696 175,706 161,715 148,720 139,722 126,723 6,723 -7,722 -24,717 -37,710 -49,699 -57,688 -62,677 -66,658 -67,640 -67,98 -66,64 -63,49 -59,39 -53,29 -47,21 -34,11 -19,4 -7,1z M29,88L29,635 104,635 104,88z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,2436,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L161,0 163,7 170,76 197,332 213,485 231,657 238,722 237,723 145,723 143,713 132,607 32,606 28,646 21,718 19,723 -76,723 -75,710 -62,587 -55,519 -45,425 -32,302 -25,234 -11,101 -1,5z M82,114L78,148 61,313 51,408 44,477 40,517 124,517 123,500 108,355 89,171 83,114z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,826,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L265,0 266,1 266,87 263,88 95,88 95,303 197,303 212,305 222,308 235,315 247,326 255,336 261,348 265,364 266,377 266,649 264,666 260,680 254,691 247,700 240,707 229,714 217,719 205,722 194,723 71,723 55,721 42,717 30,711 19,702 10,690 4,678 0,661 -1,647 -1,517 94,517 95,518 95,635 170,634 170,391 0,391 -1,390 -1,1z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,3058,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L238,0 240,1 240,87 239,88 95,88 95,308 196,308 197,312 197,395 195,397 95,397 95,635 239,635 240,636 240,723 0,723 -1,722 -1,2z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1501,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L240,0 241,86 240,88 95,88 95,308 196,308 197,309 197,396 195,397 95,397 95,635 240,635 241,722 240,723 0,723z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,510,263">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L2039,0 2047,7 2084,44 2084,46 -12,46 -11,37 -1,1z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1582,1055">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L1885,0 1965,1 1964,5 1953,16 1945,23 1936,32 1920,46 1918,47 -38,47 -61,24 -68,18 -72,13 -74,12 -74,10 -78,8 -83,3 -83,1z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1795,323">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M4096,1365z M0,0z M0,0L94,0 95,2 95,621 94,635 206,635 207,639 207,722 206,723 -1,723 -1,1z" />
                </DrawingGroup>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingImage x:Key="logo">
        <DrawingImage.Drawing>
            <DrawingGroup ClipGeometry="M0,0 V2040 H2040 V0 H0 Z">
                <DrawingGroup Transform="1,0,0,1,1019,227">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M2040,2040z M0,0z M0,0L5,2 9,9 15,20 21,29 28,39 39,60 45,69 55,88 61,97 69,111 75,120 81,131 86,139 91,148 97,157 99,164 104,170 107,176 113,185 121,200 133,220 134,227 143,237 151,252 157,261 164,271 167,280 172,286 175,292 181,301 191,320 197,329 207,348 213,357 223,376 229,385 239,404 245,413 252,423 263,444 269,453 277,467 282,475 292,493 300,506 306,516 313,528 319,540 325,549 333,563 338,571 350,594 357,605 365,619 370,627 381,647 387,656 393,667 399,676 405,687 411,696 417,707 423,716 429,727 434,735 446,758 453,769 461,783 466,791 477,811 484,821 489,829 491,836 496,842 499,848 505,857 513,871 518,879 529,899 534,907 545,927 550,935 562,958 569,969 576,979 588,1002 589,1005 589,1015 431,1173 423,1173 419,1170 412,1167 404,1162 397,1155 390,1152 388,1145 383,1145 376,1138 371,1134 366,1132 357,1124 357,1122 350,1120 341,1115 328,1102 323,1098 316,1095 308,1090 296,1078 291,1074 285,1071 279,1066 273,1063 263,1054 257,1051 247,1042 241,1039 235,1034 229,1031 227,1026 222,1024 215,1018 209,1015 199,1005 192,1001 183,994 177,991 167,982 161,979 155,974 149,971 139,962 133,959 123,949 116,945 107,938 101,935 100,931 102,929 299,928 303,925 307,924 305,919 301,910 295,901 285,882 278,871 272,860 265,850 258,839 250,825 245,818 237,802 231,793 221,774 215,765 209,758 208,751 201,742 195,733 188,722 185,718 179,706 173,698 165,682 159,673 149,654 143,645 137,638 131,626 125,618 119,606 113,598 107,586 101,578 94,564 88,554 81,544 73,530 67,521 58,504 52,494 41,478 34,464 28,454 21,444 13,430 7,421 4,418 0,420 -11,431 -12,433 -14,433 -16,440 -21,449 -26,456 -32,468 -38,475 -40,480 -44,485 -46,485 -47,494 -53,501 -56,508 -61,517 -66,522 -70,528 -76,540 -81,549 -86,556 -92,568 -98,576 -102,582 -108,592 -117,609 -123,618 -129,629 -135,638 -143,654 -150,664 -154,670 -160,680 -165,689 -171,698 -177,709 -183,718 -191,734 -198,744 -204,756 -210,764 -214,770 -220,780 -225,789 -231,798 -237,809 -243,818 -253,837 -259,846 -265,857 -271,866 -277,877 -283,886 -289,897 -295,906 -302,919 -302,924 -297,928 -100,929 -98,930 -99,935 -105,940 -113,945 -118,949 -125,953 -132,960 -138,963 -148,972 -152,974 -152,976 -164,982 -164,984 -170,987 -178,993 -185,997 -196,1008 -202,1011 -212,1020 -218,1023 -228,1032 -234,1035 -244,1044 -250,1047 -260,1056 -266,1059 -276,1068 -282,1073 -289,1077 -296,1084 -302,1087 -310,1093 -317,1097 -328,1108 -334,1111 -342,1117 -349,1121 -356,1128 -364,1132 -370,1137 -377,1141 -389,1153 -396,1156 -404,1164 -412,1168 -418,1173 -424,1173 -428,1171 -428,1169 -431,1168 -432,1166 -438,1164 -443,1159 -446,1152 -453,1146 -458,1144 -462,1136 -469,1130 -475,1127 -477,1122 -483,1119 -484,1114 -489,1113 -495,1107 -497,1102 -502,1100 -507,1094 -510,1089 -519,1079 -532,1066 -537,1062 -542,1060 -545,1054 -554,1044 -587,1011 -588,1006 -585,1001 -579,992 -573,981 -567,972 -561,961 -556,954 -549,940 -541,925 -537,920 -535,920 -533,916 -532,915 -531,907 -524,899 -517,885 -512,878 -511,871 -504,863 -501,857 -496,850 -489,836 -483,826 -478,818 -473,809 -468,802 -461,788 -455,778 -448,768 -444,762 -437,748 -431,738 -428,734 -421,720 -415,710 -412,706 -406,694 -400,686 -393,673 -388,666 -380,650 -373,637 -367,628 -360,618 -353,604 -345,589 -340,582 -333,568 -327,558 -324,554 -318,542 -312,534 -305,521 -299,512 -293,501 -287,492 -281,481 -276,474 -269,460 -263,450 -260,446 -253,432 -247,422 -244,418 -237,404 -229,389 -225,384 -223,384 -214,366 -208,358 -207,351 -200,343 -194,330 -188,323 -187,315 -180,308 -176,303 -172,295 -170,290 -164,282 -163,275 -156,267 -153,261 -147,252 -141,241 -136,234 -128,218 -121,205 -115,196 -108,186 -101,172 -93,157 -88,150 -82,138 -76,130 -70,118 -64,111 -63,103 -57,96 -55,96 -53,92 -52,91 -51,83 -44,75 -34,54 -28,46 -22,37 -12,19 -9,13 -4,6 -2,1z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1000,1248">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M2040,2040z M0,0z M0,0L4,2 9,6 31,17 39,23 57,35 68,42 77,48 87,55 100,62 109,68 119,75 125,79 128,82 127,87 105,98 95,107 79,115 70,120 62,125 51,131 46,135 31,143 27,147 11,155 5,160 -3,160 -4,158 -5,124 -26,125 -29,127 -40,130 -57,139 -65,143 -69,147 -75,150 -85,159 -104,178 -105,180 -107,180 -109,187 -113,192 -115,192 -117,199 -121,204 -123,204 -124,214 -127,218 -131,226 -132,237 -133,240 -135,241 -135,307 -133,309 -131,318 -125,329 -122,340 -116,350 -109,357 -106,363 -100,371 -96,378 -97,383 -103,388 -107,389 -109,395 -116,398 -138,420 -144,422 -149,428 -153,426 -160,417 -163,412 -172,401 -175,396 -180,389 -188,373 -198,352 -204,336 -206,325 -208,322 -209,304 -211,304 -212,302 -212,246 -209,242 -208,223 -205,217 -203,209 -201,205 -200,195 -184,163 -178,152 -173,146 -171,141 -166,135 -164,135 -162,131 -157,126 -155,121 -146,112 -141,109 -139,105 -133,102 -126,95 -124,95 -122,91 -113,84 -99,76 -86,68 -78,64 -69,62 -67,60 -57,58 -55,56 -45,54 -42,52 -33,50 -31,48 -6,47 -2,43 -1,40z" />
                </DrawingGroup>
                <DrawingGroup Transform="1,0,0,1,1182,1368">
                    <GeometryDrawing Brush="{DynamicResource ThemePrimaryText}" Geometry="F1 M2040,2040z M0,0z M0,0L8,0 14,5 22,15 25,20 30,27 39,42 50,63 54,73 56,79 60,92 62,98 63,111 65,113 67,131 69,132 70,135 70,169 68,176 67,177 66,192 65,196 63,196 62,209 61,212 59,212 58,222 55,226 53,235 43,254 33,275 29,280 25,284 23,284 21,291 13,300 5,307 3,309 1,315 -5,318 -7,323 -15,327 -21,332 -28,336 -35,343 -59,355 -63,359 -72,361 -84,367 -98,370 -104,372 -114,374 -115,375 -132,377 -139,380 -142,380 -142,424 -146,423 -151,420 -162,414 -168,409 -174,406 -180,401 -187,398 -197,392 -200,389 -206,386 -212,381 -218,378 -224,373 -231,370 -239,365 -244,361 -250,358 -256,353 -262,350 -268,345 -274,343 -272,339 -268,336 -263,334 -256,328 -247,326 -240,320 -234,317 -225,311 -214,305 -205,299 -193,292 -188,288 -182,285 -176,280 -167,278 -164,275 -162,275 -160,271 -148,264 -144,263 -142,265 -141,299 -136,303 -129,303 -124,300 -115,298 -112,296 -103,294 -71,278 -69,273 -63,270 -50,258 -43,250 -39,246 -36,240 -31,234 -28,228 -23,222 -21,213 -15,206 -13,197 -11,192 -10,179 -7,172 -7,133 -10,130 -11,110 -14,106 -15,98 -22,90 -23,82 -30,74 -32,69 -38,61 -41,56 -46,50 -46,42 -41,39 -39,38 -37,33 -31,30 -22,22 -20,19 -18,19 -16,15 -2,1z" />
                </DrawingGroup>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <Style x:Key="StatusBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorDisabled}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewsBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBackground}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBackground}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeSecondary}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeSecondaryAlt}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UpdateButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,2,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="CLICK TO UPDATE" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontFamily="{StaticResource SansationRegular}" FontSize="12" Margin="0,0,0,3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUpdateButtonBackgroundHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarComboStyle" TargetType="ScrollBar">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Width" Value="6" />
        <Setter Property="Background" Value="{DynamicResource ThemeSecondary}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeSecondary}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="2" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="1" Background="{DynamicResource ThemePrimary}" CornerRadius="6" Width="10" />

                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="true" Width="10">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource RoundedThumbStyle}" Background="{DynamicResource ThemeSecondary}" BorderBrush="{DynamicResource ThemeSecondary}" BorderThickness="1" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Width" Value="6" />
        <Setter Property="Background" Value="{DynamicResource ThemeSecondaryText}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeSecondaryText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="0" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="1" Background="{DynamicResource ThemePrimary}" CornerRadius="6" Width="10" />

                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="true" Width="10">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource RoundedThumbStyle}" Background="{DynamicResource ThemeSecondaryText}" BorderBrush="{DynamicResource ThemeSecondaryText}" BorderThickness="1" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VertScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="1" Grid.Row="0"
                               Value="{TemplateBinding VerticalOffset}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Style="{StaticResource VerticalScrollBarStyle}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Grid.Column="0" Grid.Row="1"
                               Orientation="Horizontal"
                               Value="{TemplateBinding HorizontalOffset}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                               Style="{StaticResource VerticalScrollBarStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Background" Value="{DynamicResource ThemeSecondaryAlt}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeSecondaryAlt}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" Background="{DynamicResource ThemePrimary}" CornerRadius="6">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Path Grid.Column="0" Data="M10,0 L0,5 L10,10" Fill="White" HorizontalAlignment="Left" VerticalAlignment="Center" Width="10"  Height="10" Margin="5,0,0,0" />
                                <Path Grid.Column="1" Data="M0,0 L10,5 L0,10" Fill="White" HorizontalAlignment="Right" VerticalAlignment="Center" Width="10" Height="10" Margin="0,0,5,0" />
                            </Grid>
                        </Border>

                        <Track x:Name="PART_Track" Grid.Column="0" Orientation="Horizontal">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource RoundedThumbStyle}" Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="1" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="#292A2D" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                Background="{TemplateBinding Background}"
                BorderBrush="#FF4E4E4E"
                BorderThickness="1"
                CornerRadius="8"
                SnapsToDevicePixels="True">
                        <ScrollViewer
                    Margin="4"
                    CanContentScroll="True"
                    VerticalScrollBarVisibility="Hidden"
                    HorizontalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                Name="Border"
                Background="{TemplateBinding Background}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                    ContentSource="Header"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#80FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Icon" Value="{x:Null}" />
    </Style>

    <Style x:Key="CustomSeparatorStyle" TargetType="Separator">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="4,4,4,4" />
        <Setter Property="Background" Value="#80FFFFFF" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="installProgress" TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3" />
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="3" RadiusY="3">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ProgressBarPath" TargetType="ProgressBar">
        <Viewbox Stretch="Fill">
            <Grid HorizontalAlignment="Left" Margin="-5 0">
                <Path Stretch="None" x:Name="PART_Track" Fill="{DynamicResource ThemeSecondary}" RenderTransformOrigin="0,0.5" StrokeMiterLimit="1" Data="M 0,0 l 150,0 10,10 -150,0 z">
                    <Path.RenderTransform>
                        <SkewTransform AngleX="-45" />
                    </Path.RenderTransform>
                </Path>
                <Path Stretch="None" x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{DynamicResource ThemeSecondaryAltText}" RenderTransformOrigin="0,0.5" StrokeMiterLimit="1" Data="M 0,0 l 150,0 10,10 -150,0 z">
                    <Path.RenderTransform>
                        <SkewTransform AngleX="-45" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Viewbox>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" Padding="10" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelected}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ThemeComboBoxSelectedMouseOver}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonCombo" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="ComboBoxBorder" Background="{DynamicResource ThemeMainButtonsBackground}" BorderThickness="2" CornerRadius="4" BorderBrush="{DynamicResource ThemeMainButtonsBorder}">
                            <DockPanel LastChildFill="True">
                                <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="5,0,0,0"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" />
                                <ToggleButton Style="{DynamicResource ToggleButtonCombo}" DockPanel.Dock="Right" Width="249" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Padding="210,0,0,0">
                                    <Path Data="M 0 0 L 10 10 L 20 0 Z"
                              Fill="{DynamicResource ThemePrimaryText}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                </ToggleButton>
                            </DockPanel>
                        </Border>

                        <Popup Name="PART_Popup"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=PART_Popup}"
                   AllowsTransparency="True"
                   PopupAnimation="Fade"
                   VerticalOffset="58">
                            <Border Background="{DynamicResource ThemeSecondaryAlt}" BorderBrush="{DynamicResource ThemeSecondaryAlt}" BorderThickness="0" CornerRadius="5" Width="300">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="{DynamicResource ThemeMainButtonsBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorder}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="SettingsButtonBorder" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <Grid>
                            <Path IsHitTestVisible="False" Data="M440-120v-240h80v80h320v80H520v80h-80Zm-320-80v-80h240v80H120Zm160-160v-80H120v-80h160v-80h80v240h-80Zm160-80v-80h400v80H440Zm160-160v-240h80v80h160v80H680v80h-80Zm-480-80v-80h400v80H120Z" Fill="{DynamicResource ThemeSecondaryAltText}" Width="20" Height="20" Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SettingsButtonBorder" Property="BorderBrush" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ackBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltText}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemePrimaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="closeBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="checkBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemePrimaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GameMenuButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemeDisabledText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="downloadBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonAltHover}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemePrimaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="laterBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeOtherButtonHover}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemePrimaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeDisabledText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsMenuButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMenuButtonColorHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeDisabledText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AdvancedTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="R5R Library Location" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeSecondaryAltText}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeSecondaryText}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeSecondaryText}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemePrimaryAltText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownloadSpeedTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Download Speed Limit" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="KB/s" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="25" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            <Border x:Name="BackgroundBorder" Background="Transparent" BorderBrush="{DynamicResource ThemeSecondaryAltText}" BorderThickness="1" CornerRadius="12" Height="27" Width="50" />
                            <Border Background="{DynamicResource ThemeSecondaryAltText}" HorizontalAlignment="Left" x:Name="slider" Width="23" Height="23" BorderThickness="1" CornerRadius="10" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="2" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Path x:Name="checkImage" IsHitTestVisible="False" Data="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z" Fill="{DynamicResource ThemeSecondary}" Width="10" Height="10" Stretch="Uniform" />
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ThemeSecondaryAltText}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ThemeSecondaryAltText}" />
                            <Setter TargetName="slider" Property="Background" Value="{DynamicResource ThemeSecondary}" />
                            <Setter TargetName="checkImage" Property="Data" Value="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z" />
                            <Setter TargetName="checkImage" Property="Fill" Value="{DynamicResource ThemeSecondaryAltText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaylistFileTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Playlists File" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HostNameTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Host Name" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CoresTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Reserved Cores" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="#" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WorkerTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Worker Threads" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="#" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AffinityTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Processor Affinity" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="#" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ResWidthTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Resolution Width" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="px" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ResHeightTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Resolution Height" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="px" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaxFPSTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,0,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Max FPS" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="fps" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,15,5,14" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandLineTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ThemePrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Bottom" Margin="5,-4.3,55,5" />
                        </Border>
                        <TextBlock IsHitTestVisible="False" Text="Command Line" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="10" FontFamily="{StaticResource SansationLight}" Height="15" Margin="8,4,-8,30" />
                        <TextBlock IsHitTestVisible="False" Text="args" Foreground="{DynamicResource ThemeSecondaryText}" FontSize="18" FontFamily="{StaticResource SansationLight}" Margin="450,21,5,8" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeMainButtonsBorderHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NewsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UninstallBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ThemeUninstallButtonHover}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ThemeUninstallButtonText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnborder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="btnborder" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                            <Setter Property="BorderBrush" TargetName="btnborder" Value="{DynamicResource ThemeComboBoxMouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>